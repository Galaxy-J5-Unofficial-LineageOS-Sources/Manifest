From 6633dfabb5d75ebc48d964d94f7867115c215cf8 Mon Sep 17 00:00:00 2001
From: html6405 <peter.schelchshorn@mhs-solutions.at>
Date: Fri, 2 Sep 2022 14:14:20 +0200
Subject: [PATCH 2/6] Revert "biometrics: Deprecate inscreen HAL"

This reverts commit 4544a284a6687013d7f1ee70e3be048ae274f6e3.
---
 .../fingerprint/inscreen/1.0/Android.bp       | 15 ++++
 .../inscreen/1.0/IFingerprintInscreen.hal     | 88 +++++++++++++++++++
 .../1.0/IFingerprintInscreenCallback.hal      | 26 ++++++
 3 files changed, 129 insertions(+)
 create mode 100644 biometrics/fingerprint/inscreen/1.0/Android.bp
 create mode 100644 biometrics/fingerprint/inscreen/1.0/IFingerprintInscreen.hal
 create mode 100644 biometrics/fingerprint/inscreen/1.0/IFingerprintInscreenCallback.hal

diff --git a/biometrics/fingerprint/inscreen/1.0/Android.bp b/biometrics/fingerprint/inscreen/1.0/Android.bp
new file mode 100644
index 0000000..27e887c
--- /dev/null
+++ b/biometrics/fingerprint/inscreen/1.0/Android.bp
@@ -0,0 +1,15 @@
+// This file is autogenerated by hidl-gen -Landroidbp.
+
+hidl_interface {
+    name: "vendor.lineage.biometrics.fingerprint.inscreen@1.0",
+    root: "vendor.lineage",
+    system_ext_specific: true,
+    srcs: [
+        "IFingerprintInscreen.hal",
+        "IFingerprintInscreenCallback.hal",
+    ],
+    interfaces: [
+        "android.hidl.base@1.0",
+    ],
+    gen_java: true,
+}
diff --git a/biometrics/fingerprint/inscreen/1.0/IFingerprintInscreen.hal b/biometrics/fingerprint/inscreen/1.0/IFingerprintInscreen.hal
new file mode 100644
index 0000000..a238aed
--- /dev/null
+++ b/biometrics/fingerprint/inscreen/1.0/IFingerprintInscreen.hal
@@ -0,0 +1,88 @@
+/*
+ * Copyright (C) 2019 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package vendor.lineage.biometrics.fingerprint.inscreen@1.0;
+
+import IFingerprintInscreenCallback;
+
+interface IFingerprintInscreen {
+    /**
+     * Information on the position of the scanner
+     * Note: X and Y are the left-upper corner of the
+     * FOD view, not the center.
+     */
+    getPositionX() generates (int32_t x);
+    getPositionY() generates (int32_t y);
+    getSize() generates (int32_t size);
+    /**
+     * Called when fingerprint enrollment started
+     */
+    onStartEnroll();
+    /**
+     * Called when fingerprint enrollment finished
+     */
+    onFinishEnroll();
+    /**
+     * Called when the on-screen area of the fingerprint scanner
+     * is pressed and ready to scan.
+     */
+    onPress();
+    /**
+     * Called when the on-screen area of the scanner is released
+     */
+    onRelease();
+    /**
+     * Called when fingerprint scanning is engaged and FOD view is shown
+     */
+    onShowFODView();
+    /**
+     * Called when fingerprint scanning is inactivated
+     */
+    onHideFODView();
+    /**
+     * Return true if IFingerprintInscreen is responsible for handling
+     * of given acquiredInfo + vendorCode.
+     */
+    handleAcquired(int32_t acquiredInfo, int32_t vendorCode) generates (bool ret);
+    /**
+     * Return true if IFingerprintInscreen is responsible for handling
+     * of given error + vendorCode.
+     */
+    handleError(int32_t error, int32_t vendorCode) generates (bool ret);
+    /**
+     * Enable / disable long-pressing on the fingerprint area.
+     * Used when in keyguard mode.
+     */
+    setLongPressEnabled(bool enabled);
+    /**
+     * Calculate the dimming amount [0, 255] based on the current brightness [0, 255]
+     * This can be done by the vendor's kernel, but can also be implemented
+     * directly in this hal.
+     */
+    getDimAmount(int32_t cur_brightness) generates (int32_t cur_brightness);
+    /**
+     * Should the framework boost the brightness? In ideal scenario the boosting
+     * should be handled in the lower layers for the best user experience.
+     * If this returns false, then the implementation MUST boost the brightness
+     * according to the previous events.
+     */
+    shouldBoostBrightness() generates (bool ret);
+    /**
+     * This function is used to register a callback function which is
+     * called by the HAL whenever there is a finger up/down event.
+     */
+    oneway setCallback(IFingerprintInscreenCallback callback);
+};
diff --git a/biometrics/fingerprint/inscreen/1.0/IFingerprintInscreenCallback.hal b/biometrics/fingerprint/inscreen/1.0/IFingerprintInscreenCallback.hal
new file mode 100644
index 0000000..1d7039c
--- /dev/null
+++ b/biometrics/fingerprint/inscreen/1.0/IFingerprintInscreenCallback.hal
@@ -0,0 +1,26 @@
+/*
+ * Copyright (C) 2019 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *	http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package vendor.lineage.biometrics.fingerprint.inscreen@1.0;
+
+/**
+ * IFingerprintInscreenCallback is the callback interface to
+ * {@link IFingerprintInscreen.setCallback}.
+ */
+interface IFingerprintInscreenCallback {
+    oneway onFingerDown();
+    oneway onFingerUp();
+};
-- 
2.34.1

